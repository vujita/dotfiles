#!/bin/zsh
eval "$(zoxide init zsh)"
export ZPLUG_HOME=~/.zplug
[ -f $ZPLUG_HOME/init.zsh ] && source $ZPLUG_HOME/init.zsh
mkdir -p ~/.nvm
export NVM_DIR=~/.nvm
set -o allexport
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/.zshrc-mac ] && source ~/.zshrc-mac

export PATH="$HOME/.tmuxifier/bin:$PATH"
export set EDITOR=nvim
export set CODE_DIRECTORY="${HOME}/code"

if [ -z $CODESPACES ]; then
  export set DOTFILES_DIR="${CODE_DIRECTORY}/dotfiles"
else
  # reset DOTFILES_DIR env
  export set DOTFILES_DIR="/workspaces/.codespaces/.persistedshare/dotfiles"
fi

export set NOTES_DIR="${CODE_DIRECTORY}/notes"
[ -f ~/.env ] && source ~/.env

alias so="source ~/.zshrc"


gch(){
  git checkout `git branch | fzf | tr -d '[:space:]'`
}

[ -f ~/.env ] && source ~/.env # ENV's this will be outside of git
dockerStopAllContainers(){
  docker stop $(docker ps -aq)
}
dockerRemoveAllContainers(){
  dockerStopAllContainers
  docker rm $(docker ps -aq)
}
dockerRemoveAllImages(){
  dockerRemoveAllContainers
  docker rmi $(docker images -aq)
}
add_npm_bin(){
  echo "Adding $PWD/node_modules/.bin to PATH"
  export set PATH=$PWD/node_modules/.bin:$PATH
}
command_exists () {
    type "$1" &> /dev/null ;
}

export NVM_DIR="$HOME/.nvm"

export NVM_COMPLETION=true
export NVM_AUTO_USE=true
export NVM_NO_USE=true

if command_exists zap; then
  plug "chivalryq/git-alias"
  plug "lukechilds/zsh-better-npm-completion"
  plug "andrewferrier/fzf-z"
  plug "felixr/docker-zsh-completion"
  plug "lukechilds/zsh-nvm"
  plug "lukechilds/zsh-better-npm-completion"
else
  echo "zap plugins is not installed because zap not installed"
fi


eval "$(starship init zsh)"

alias vim="nvim"
alias vi="nvim"
alias oldvim="vim"
alias ll="exa -lar --icons"


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
[[ -r $NVM_DIR/bash_completion ]] && \. $NVM_DIR/bash_completion

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/config/tabtab/zsh/__tabtab.zsh ] && source ~/config/tabtab/zsh/__tabtab.zsh

command_exists () {
    type "$1" &> /dev/null ;
}
function auto_load_xrun(){
  if command_exists xrun; then
    eval "$(xrun --completion=zsh)"
  fi
}
auto_load_xrun
autoload  add-zsh-hook
add-zsh-hook chpwd auto_load_xrun

function dsize()
{
    dir=$(pwd)
    if [ "$1" != "" ]; then
            dir=$1
    fi
    echo $(du -hs $dir)
}

vim_dir(){
  old_dir=$PWD;
  dir=$1;
  echo "Changing directory from ${PWD} -> ${dir}";
  cd $1;
  nvim .
  echo -n "Returning to original directory ${old_dir}. Is this ok? (y/n)"
  read yesno < /dev/tty
  if [ "x$yesno" = "xy" ];then
    cd $old_dir;
  else
    echo "Staying in ${1}"
[[]]
  fi
}

[ -f ~/.zsh_functions ] && source ~/.zsh_functions

# PROMPT_COMMAND="pre_prompt_command; $PROMPT_COMMAND"
alias vim=nvim
alias vi=nvim

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# pnpm
export PNPM_HOME="/Users/vnguyen/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
